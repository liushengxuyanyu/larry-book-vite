import{_ as t,D as o,o as p,c as d,k as s,I as n,w as i,a,R as l}from"./chunks/framework.4hIqoSk1.js";const r="/larry-book-vite/assets/lifecycle.U4Y4AfvC.png",ps=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"frame/vue2/lifeCycle.md","filePath":"frame/vue2/lifeCycle.md","lastUpdated":1733279472000}'),c={name:"frame/vue2/lifeCycle.md"},h=s("div",{class:"tip custom-block"},[s("p",{class:"custom-block-title"},"提示"),s("p",null,"生命周期相关专题 训练，无特殊说明，指的都是 Vue2")],-1),k=s("h2",{id:"vue-的生命周期-钩子",tabindex:"-1"},[a("Vue 的生命周期(钩子)? "),s("a",{class:"header-anchor",href:"#vue-的生命周期-钩子","aria-label":'Permalink to "Vue 的生命周期(钩子)?"'},"​")],-1),u={class:"info custom-block"},b=s("p",{class:"custom-block-title"},null,-1),g=l("",8),E=l("",9),_=s("ol",{start:"9"},[s("li",null,[s("strong",null,"beforeDestroy"),a(":")])],-1),m=s("p",null,"组件实例销毁之前调用，在这里依然能够获取到数据。",-1),y=s("ol",{start:"10"},[s("li",null,[s("strong",null,"destroyed"),a(":")])],-1),f=s("p",null,"组件实例销毁后调用，对应的所有指令、事件将会被解绑，所有子组件实例也会被销毁",-1),C=s("ol",{start:"11"},[s("li",null,[s("strong",null,"errorCaptured(2.5.0+ 新增)"),a(":")])],-1),F=s("p",null,"在捕获一个来自后代组件的错误时被调用。此钩子会收到三个参数：错误对象、发生错误的组件实例以及一个包含错误来源信息的字符串。此钩子可以返回 false 以阻止该错误继续向上传播。",-1),v=s("blockquote",null,[s("p",null,[s("strong",null,"完整生命周期图，生命周期很重点。完全理解了 vue 的生命周期，就知道运转流程。会规避很多错误。")])],-1),D=s("p",null,[s("img",{src:r,alt:""})],-1),A=l("",5),B={class:"info custom-block"},q=s("p",{class:"custom-block-title"},null,-1),T=s("p",null,[a("可以在钩子函数 "),s("strong",null,"created、beforeMount、mounted"),a(" 中进行调用，因为在这三个钩子函数中，data 已经创建，可以将服务端端返回的数据进行赋值。")],-1),P=s("ol",null,[s("li",null,"能更快获取到服务端数据，减少页面 loading 时间"),s("li",null,[s("strong",null,"SSR"),a(" 不支持 "),s("strong",null,"beforeMount"),a("、"),s("strong",null,"mounted"),a(" 钩子函数，所以放在 "),s("strong",null,"created"),a(" 中有助于一致性")])],-1),V=s("h2",{id:"在-beforecreate、created、beforemount、mounted、beforeupdate-修改数据会触发-updated-钩子吗",tabindex:"-1"},[a("在 beforeCreate、created、beforeMount、mounted、beforeUpdate 修改数据会触发 updated 钩子吗？ "),s("a",{class:"header-anchor",href:"#在-beforecreate、created、beforemount、mounted、beforeupdate-修改数据会触发-updated-钩子吗","aria-label":'Permalink to "在 beforeCreate、created、beforeMount、mounted、beforeUpdate 修改数据会触发 updated 钩子吗？"'},"​")],-1),S={class:"info custom-block"},M=s("p",{class:"custom-block-title"},null,-1),x=s("code",null,"beforeCreate",-1),O=s("code",null,"updated",-1),$=s("code",null,"created",-1),I=s("code",null,"data",-1),j=s("strong",null,"页面会更新修改后的数据(首次渲染相当于，在 mounted 挂在后更新的)",-1),N=s("code",null,"updated",-1),U=s("code",null,"beforeMount",-1),w=s("code",null,"updated",-1),R=s("code",null,"mounted",-1),J=s("code",null,"updated",-1),Y=s("code",null,"beforeUpdate",-1),z=s("code",null,"updated",-1),G=l("",5),H={class:"info custom-block"},K=s("p",{class:"custom-block-title"},null,-1),L=s("p",null,[s("strong",null,"渲染挂载过程：")],-1),Q=s("p",null,[s("strong",null,"子组件更新过程：")],-1),W=s("p",null,[s("strong",null,"父组件更新过程：")],-1),X=s("p",null,[s("strong",null,"销毁过程：")],-1),Z=l("",4);function ss(as,es,ns,is,ls,ts){const e=o("font");return p(),d("div",null,[h,k,s("div",u,[b,s("p",null,[s("strong",null,[n(e,{style:{color:"red"}},{default:i(()=>[a("---------------创建阶段--------------")]),_:1})])]),g,s("p",null,[s("strong",null,[n(e,{style:{color:"red"}},{default:i(()=>[a("---------------运行阶段--------------")]),_:1})])]),E,s("p",null,[s("strong",null,[n(e,{style:{color:"red"}},{default:i(()=>[a("---------------销毁阶段--------------")]),_:1})])]),_,m,y,f,s("p",null,[s("strong",null,[n(e,{style:{color:"red"}},{default:i(()=>[a("---------------捕获组件错误--------------")]),_:1})])]),C,F,v,D]),A,s("div",B,[q,T,s("p",null,[a("但是推荐在 "),s("strong",null,[n(e,{color:"red"},{default:i(()=>[a("created")]),_:1})]),a(" 钩子函数中调用异步请求，因为在 "),s("strong",null,[n(e,{color:"red"},{default:i(()=>[a("created")]),_:1})]),a(" 钩子函数中调用异步请求有以下优点：")]),P]),V,s("div",S,[M,s("ul",null,[s("li",null,[s("p",null,[x,a("是拿不到响应式数据的，可以修改，但没有响应式效果 页面也不会显示修改后的数据，更"),n(e,{color:"red"},{default:i(()=>[a("不会")]),_:1}),a("触发 "),O])]),s("li",null,[s("p",null,[$,a("可以拿到"),I,a("中响应式数据，修改后，"),j,a(", 但"),n(e,{color:"red"},{default:i(()=>[a("不会")]),_:1}),a("触发 "),N])]),s("li",null,[s("p",null,[U,a(" 和 created 一样，只不过这一步 仅仅是 虚拟 DOM 创建完毕， "),n(e,{color:"red"},{default:i(()=>[a("不会")]),_:1}),a("触发 "),w])]),s("li",null,[s("p",null,[R,a(" 这时候页面已经挂载完毕，已经可以访问真实 DOM，在这里会修改数据的话， "),n(e,{color:"blue"},{default:i(()=>[a("会")]),_:1}),a("触发 "),J])]),s("li",null,[s("p",null,[Y,a(" 这个钩子发生在更新之前，也就是响应式数据发生更新，虚拟 dom 重新渲染之前被触发，可以在当前阶段进行更改数据，不会造成重渲染, "),n(e,{color:"red"},{default:i(()=>[a("不会")]),_:1}),a("触发 "),z])])])]),G,s("div",H,[K,s("p",null,[s("strong",null,[n(e,{color:"red"},{default:i(()=>[a("父子组件的生命周期是一个嵌套的过程。")]),_:1})])]),L,s("blockquote",null,[n(e,{color:"red"},{default:i(()=>[a("父 beforeCreate")]),_:1}),a(" -> "),n(e,{color:"red"},{default:i(()=>[a("父 created")]),_:1}),a(" -> "),n(e,{color:"red"},{default:i(()=>[a("父 beforeMount")]),_:1}),a(" -> "),n(e,{color:"blue"},{default:i(()=>[a("子 beforeCreate")]),_:1}),a(" -> "),n(e,{color:"blue"},{default:i(()=>[a("子 created")]),_:1}),a(" -> "),n(e,{color:"blue"},{default:i(()=>[a("子 beforeMount")]),_:1}),a(" -> "),n(e,{color:"blue"},{default:i(()=>[a("子 mounted")]),_:1}),a(" -> "),n(e,{color:"red"},{default:i(()=>[a("父 mounted")]),_:1})]),Q,s("blockquote",null,[n(e,{color:"red"},{default:i(()=>[a("父 beforeUpdate")]),_:1}),a(" -> "),n(e,{color:"blue"},{default:i(()=>[a("子 beforeUpdate")]),_:1}),a(" -> "),n(e,{color:"blue"},{default:i(()=>[a("子 updated")]),_:1}),a(" -> "),n(e,{color:"red"},{default:i(()=>[a("父 updated")]),_:1})]),W,s("blockquote",null,[n(e,{color:"red"},{default:i(()=>[a("父 beforeUpdate")]),_:1}),a(" -> "),n(e,{color:"red"},{default:i(()=>[a("父 updated")]),_:1})]),X,s("blockquote",null,[n(e,{color:"red"},{default:i(()=>[a("父 beforeDestroy")]),_:1}),a(" -> "),n(e,{color:"blue"},{default:i(()=>[a("子 beforeDestroy")]),_:1}),a(" -> "),n(e,{color:"blue"},{default:i(()=>[a("子 destroyed")]),_:1}),a(" -> "),n(e,{color:"red"},{default:i(()=>[a("父 destroyed")]),_:1})])]),Z])}const ds=t(c,[["render",ss]]);export{ps as __pageData,ds as default};
