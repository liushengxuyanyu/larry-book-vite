import{_ as a,o as s,c as e,R as t}from"./chunks/framework.CP3Xps-Z.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"frame/vue2/common.md","filePath":"frame/vue2/common.md","lastUpdated":1702715439000}'),i={name:"frame/vue2/common.md"},l=t('<div class="tip custom-block"><p class="custom-block-title">提示</p><p>记录一些通用的 vue 面试 <a href="https://juejin.cn/post/6936082054194921480/" target="_blank" rel="noreferrer">https://juejin.cn/post/6936082054194921480/</a></p></div><h2 id="不使用脚手架-创建一个-vue-项目-需要怎么做" tabindex="-1">不使用脚手架，创建一个 Vue 项目，需要怎么做？ <a class="header-anchor" href="#不使用脚手架-创建一个-vue-项目-需要怎么做" aria-label="Permalink to &quot;不使用脚手架，创建一个 Vue 项目，需要怎么做？&quot;">​</a></h2><h2 id="项目中-assets-和-static-的区别" tabindex="-1">项目中 assets 和 static 的区别？ <a class="header-anchor" href="#项目中-assets-和-static-的区别" aria-label="Permalink to &quot;项目中 assets 和 static 的区别？&quot;">​</a></h2><details class="details custom-block"><summary>查看答案</summary><p>都是存放静态资源的。</p><p><code>assets</code> 会被打包，<code>static</code> 不会被打包</p></details><h2 id="怎么解决-vue-打包后静态资源图片失效的问题" tabindex="-1">怎么解决 vue 打包后静态资源图片失效的问题？ <a class="header-anchor" href="#怎么解决-vue-打包后静态资源图片失效的问题" aria-label="Permalink to &quot;怎么解决 vue 打包后静态资源图片失效的问题？&quot;">​</a></h2><details class="details custom-block"><summary>查看答案</summary><p>找到 build 打包对象里的 <code>assetsPublicPath</code> 属性默认值为<code>/</code>,更改为<code>./</code>就好了</p></details><h2 id="怎么解决-vue-动态设置-img-的-src-不生效的问题" tabindex="-1">怎么解决 vue 动态设置 img 的 src 不生效的问题？ <a class="header-anchor" href="#怎么解决-vue-动态设置-img-的-src-不生效的问题" aria-label="Permalink to &quot;怎么解决 vue 动态设置 img 的 src 不生效的问题？&quot;">​</a></h2><details class="details custom-block"><summary>查看答案</summary><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> :src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;require(&#39;../../../assets/images/xxx.png&#39;)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></details><h2 id="使用-vue-渲染大量数据时应该怎么优化" tabindex="-1">使用 vue 渲染大量数据时应该怎么优化？ <a class="header-anchor" href="#使用-vue-渲染大量数据时应该怎么优化" aria-label="Permalink to &quot;使用 vue 渲染大量数据时应该怎么优化？&quot;">​</a></h2><details class="details custom-block"><summary>查看答案</summary><ol><li>首先从设计上避免大数据获取和渲染，可以采取分页的方式获取，避免渲染大量数据</li></ol><p>vue-virtual-scroller 等虚拟滚动方案，只渲染视口范围内的数据</p><p>如果不需要更新，可以使用 v-once 方式只渲染一次</p><p>通过 v-memo 可以缓存结果，结合 v-for 使用，避免数据变化时不必要的 VNode 创建</p></details>',10),o=[l];function r(c,d,n,u,h,m){return s(),e("div",null,o)}const v=a(i,[["render",r]]);export{k as __pageData,v as default};
