import{_ as e,o as s,c,R as o}from"./chunks/framework.CP3Xps-Z.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"engine/webpack/01.md","filePath":"engine/webpack/01.md","lastUpdated":1702988788000}'),a={name:"engine/webpack/01.md"},t=o('<h2 id="css-怎么提取成单独的文件" tabindex="-1">css 怎么提取成单独的文件？ <a class="header-anchor" href="#css-怎么提取成单独的文件" aria-label="Permalink to &quot;css 怎么提取成单独的文件？&quot;">​</a></h2><h2 id="生产环境构建时为什么要将-css-提取到单独的文件" tabindex="-1">生产环境构建时为什么要将 css 提取到单独的文件？ <a class="header-anchor" href="#生产环境构建时为什么要将-css-提取到单独的文件" aria-label="Permalink to &quot;生产环境构建时为什么要将 css 提取到单独的文件？&quot;">​</a></h2><details class="details custom-block"><summary>查看答案</summary><ol><li><p><strong>更好的利用缓存</strong>，当 <code>css</code> 和 <code>js</code> 分开时，浏览器可以缓存 <code>css</code>文件并重复使用，而不必重新加载，也不用因为<code>js</code>内容的变化，导致<code>css</code>缓存失效。</p></li><li><p><strong>更快的渲染速度</strong>，浏览器是同时可以并行加载多个静态资源，将 <code>css</code> 单独提取出俩，有助于加快 <code>js</code> 加载和解析速度，最终加快页面的渲染速度。</p></li><li><p><strong>方便代码调试</strong>, 独立的 <code>css</code> 文件有助于代码阅读和调试。</p></li></ol></details>',3),d=[t];function r(n,i,l,_,p,h){return s(),c("div",null,d)}const f=e(a,[["render",r]]);export{u as __pageData,f as default};
