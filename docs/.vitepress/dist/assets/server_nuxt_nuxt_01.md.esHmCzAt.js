import{_ as t,D as p,o as h,c as d,k as s,I as l,w as n,a as i,R as e}from"./chunks/framework.4hIqoSk1.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"server/nuxt/nuxt_01.md","filePath":"server/nuxt/nuxt_01.md","lastUpdated":1733279472000}'),r={name:"server/nuxt/nuxt_01.md"},k=s("h2",{id:"为什么选择使用-nuxt",tabindex:"-1"},[i("为什么选择使用 Nuxt？ "),s("a",{class:"header-anchor",href:"#为什么选择使用-nuxt","aria-label":'Permalink to "为什么选择使用 Nuxt？"'},"​")],-1),u=s("ul",null,[s("li",null,"整合 Vue3 作为视图引擎；"),s("li",null,"整合 Webpack5 和 Vite 作为打包工具；"),s("li",null,"提供最新 ES 语法，零配置 TS 支持；"),s("li",null,"内置 vue-router，基于文件的路由；"),s("li",null,"内置 SSR 友好的全局状态管理模块；"),s("li",null,"内置数据访问模块 useFetch 等等。")],-1),o=s("p",null,"Nuxt 内置了 Nitro 服务端引擎，能够同时提供 SSR 和 API 路由支持，这也就是说，除了能够提供服务端渲染能力，我们还能编写服务端接口，这使我们拥有了全栈开发能力。另外 API 兼容 node、connect、express，未来也可以把应用发布到 Node.js、Serverless 等服务器运行环境。",-1),c=s("p",null,"为了满足开发者多种场景开发需求，Nuxt 提供了 5 种渲染模式：",-1),E=s("ul",null,[s("li",null,"服务端渲染 SSR；"),s("li",null,"客户端渲染 SPA；"),s("li",null,"全静态内容生成 SSG；"),s("li",null,"混合渲染模式 Hybrid；"),s("li",null,"边缘渲染 Edge-render。")],-1),g=s("p",null,"比起传统 Vue 项目，Nuxt 给予我们更多扩展能力和复用能力：",-1),b=s("ul",null,[s("li",null,"中间件：针对单个路由的扩展；"),s("li",null,"插件：针对 NuxtApp 的扩展；"),s("li",null,"模块：扩展 Nuxt 核心能力以及简化整合能力；"),s("li",null,"层：针对 Nuxt 应用的组件、工具和配置复用能力。")],-1),_=e('<p>良好的开发体验主要来源于效率工具和避免重复劳动，这方面我们看一下 Nuxt 提供的能力：</p><ul><li>基于文件的路由支持；</li><li>组件、依赖库、工具集的自动导入；</li><li>内置的数据获取模块和新的编程范式；</li><li>零配置的 TS 支持；</li><li>插件、模块、中间件等多种复用机制。</li></ul><h2 id="nuxt-的整体架构" tabindex="-1">Nuxt 的整体架构？ <a class="header-anchor" href="#nuxt-的整体架构" aria-label="Permalink to &quot;Nuxt 的整体架构？&quot;">​</a></h2><p>Nuxt 框架由一些包组成，它们各有不同作用：</p><ul><li>核心引擎：nuxt，实现核心功能，串联所有模块；</li><li>打包：@nuxt/vite-builder、@nuxt/webpack-builder；</li><li>命令行工具：nuxi，创建、调试、打包项目等；</li><li>服务端引擎：nitro，服务端渲染，API 路由；</li><li>开发包：@nuxt/kit，用于 Nuxt 模块开发；</li><li>Nuxt 2 桥：@nuxt/bridge，用于 Nuxt2 项目中使用 Nuxt3 特性。</li></ul><h2 id="如何创建-nuxt-项目" tabindex="-1">如何创建 Nuxt 项目？ <a class="header-anchor" href="#如何创建-nuxt-项目" aria-label="Permalink to &quot;如何创建 Nuxt 项目？&quot;">​</a></h2><p><code>npx nuxi init nuxt-app</code> 或安装最后的稳定版本 <code>npx nuxi@latest init nuxt-app</code></p><p>安装过程中，会选择包管理工具，<code>npm/yarn/pnpm</code> 均可，然后自动安装依赖。</p><p>Nuxt3 默认支持 vue3 和 ts，默认 <code>ssr</code> 渲染方式</p><h2 id="如何创建路由" tabindex="-1">如何创建路由？ <a class="header-anchor" href="#如何创建路由" aria-label="Permalink to &quot;如何创建路由？&quot;">​</a></h2>',10),y=e(`<p>在主入口 <code>app.vue</code>, 使用 <code>&lt;NuxtPage&gt;&lt;/NuxtPage&gt;</code> 相当于引入 vue3 的 <code>&lt;router-view&gt;&lt;/router-view&gt;</code></p><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!-- 路由出口 组件--&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">NuxtPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">NuxtPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>Nuxt 是以文件路径的方式处理路由地址，启动项目后，路由默认会找 <code>pages</code> 目录下的 <code>index.vue</code> 组件, 创建<code>pages</code>目录，以及<code>index.vue</code></p><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- index.vue --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Index Page&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>访问 <code>https://localhost:3000</code> 会跳转到 <code>pages</code> 下的 <code>index.vue</code></p><p>访问 <code>https://localhost:3000/detail</code> 会跳转到 <code>pages</code> 下的 <code>detail.vue</code></p><p>也可以使用<code>&lt;NuxtLink&gt;&lt;/NuxtLink&gt;</code> 相当于 vue3 中的 <code>&lt;router-link&gt;&lt;/router-link&gt;</code>来进行路由之间的跳转</p><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- index.vue --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Index Page&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">NuxtLink</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/detail&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;去详情页&lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">NuxtLink</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,8),m=s("strong",null,"文件名或者文件夹名称里面包含了方括号",-1),x=e(`<div class="language-diff vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pages/</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">--- index.vue</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">--- detail-[id].vue</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>访问 <code>https://localhost:3000/detail-1</code>、<code>https://localhost:3000/detail-2</code> 就可以访问到这个组件</p><p>我们可以在<code>detail-[id].vue</code>中访问 id 这个参数:</p><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {{ $route.params.id }}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,4);function v(A,N,D,f,S,P){const a=p("font");return h(),d("div",null,[k,s("p",null,[s("strong",null,[l(a,{color:"blue"},{default:n(()=>[i("开箱即用的开发环境")]),_:1})])]),u,s("p",null,[s("strong",null,[l(a,{color:"blue"},{default:n(()=>[i("服务端能力")]),_:1})])]),o,s("p",null,[s("strong",null,[l(a,{color:"blue"},{default:n(()=>[i("不同场景解决方案")]),_:1})])]),c,E,s("p",null,[s("strong",null,[l(a,{color:"blue"},{default:n(()=>[i("扩展能力")]),_:1})])]),g,b,s("p",null,[s("strong",null,[l(a,{color:"blue"},{default:n(()=>[i("良好的开发体验")]),_:1})])]),_,s("p",null,[s("strong",null,[l(a,{color:"blue"},{default:n(()=>[i("基于文件的路由")]),_:1})])]),y,s("p",null,[s("strong",null,[l(a,{color:"blue"},{default:n(()=>[i("动态路由")]),_:1})]),i(" 如果 "),m,i("，它们将被转换为动态路由参数。比如我们像下面这样修改文件结构：")]),x])}const B=t(r,[["render",v]]);export{C as __pageData,B as default};
