import{_ as r,D as d,o as l,c as n,k as o,I as c,w as a,a as e,R as s}from"./chunks/framework.4hIqoSk1.js";const i="/larry-book-vite/assets/07.OtB0ZLZr.png",D=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"browser/缓存-存储.md","filePath":"browser/缓存-存储.md","lastUpdated":1733279472000}'),h={name:"browser/缓存-存储.md"},p=s("",8),g=s("",9),_=s("",32),u=o("p",null,[o("code",null,"hash"),e(" 属于项目级别的 "),o("code",null,"hash"),e("，意思就是整个项目中只要有文件改变该 "),o("code",null,"hash"),e(" 值就会变化，同时所有文件也都共用该 "),o("code",null,"hash"),e(" 值。最终打包输出的资源文件名 "),o("code",null,"hash"),e(" 值都一样，按照缓存策略进行分析，浏览器加载所有资源都将重新请求服务器，导致没有改动资源的加载浪费，因此不建议在项目中采用这种方式进行构建。")],-1),f=o("p",null,[o("code",null,"chunkhash"),e(" 与 "),o("code",null,"hash"),e(" 不同，其属于入口文件级别的 "),o("code",null,"hash"),e("，会根据入口文件（entry）的依赖进行打包，同时为了避免一些公共库、插件被打包至入口文件中，我们可以借助 "),o("code",null,"CommonsChunkPlugin"),e(" 插件进行公共模块的提取。 "),o("strong",null,"公共模块一般除了升级版本外永远不会改动，我们希望浏览器能够将其存入强缓存中，不受其他业务模块的修改导致文件 chunkhash 名称变动的影响。")],-1),b=s("",6),k=o("a",{href:"https://a.test.com",target:"_blank",rel:"noreferrer"},"https://a.test.com",-1),m=o("a",{href:"https://b.test.com",target:"_blank",rel:"noreferrer"},"https://b.test.com",-1),T=o("a",{href:"https://a.test.com",target:"_blank",rel:"noreferrer"},"https://a.test.com",-1),S=o("a",{href:"https://test.com",target:"_blank",rel:"noreferrer"},"https://test.com",-1),M=o("ol",null,[o("li",null,"因为 localStorage 也有同源策略的限制，不能跨域。"),o("li",null,"子域名无法继承父域名的 localstorage，这点和 cookie 的差别很大。")],-1),C=o("blockquote",null,[o("p",null,'然而，如果这些域名拥有相同的顶级域名（比如都是 ".58.com"），浏览器将会认为它们是同一来源，因此它们之间的同源策略就不再适用。这样一来，不同子域名之间的页面就可以共享 localStorage 数据了。要实现这一点，你可以在DNS服务器设置中将不同的子域名都指向相同的顶级域名。通常，这是通过在 DNS 记录中配置 CNAME 记录或 A 记录来完成的。')],-1);function x(q,P,I,E,N,A){const t=d("font");return l(),n("div",null,[p,o("p",null,[o("strong",null,[c(t,{color:"blue"},{default:a(()=>[e("====强缓存====")]),_:1})])]),g,o("p",null,[o("strong",null,[c(t,{color:"blue"},{default:a(()=>[e("====协商缓存===")]),_:1})])]),_,o("p",null,[o("strong",null,[c(t,{color:"blue"},{default:a(()=>[e("1. hash")]),_:1})])]),u,o("p",null,[o("strong",null,[c(t,{color:"blue"},{default:a(()=>[e("2. chunkhash")]),_:1})])]),f,o("p",null,[o("strong",null,[c(t,{color:"blue"},{default:a(()=>[e("2. contenthash")]),_:1})])]),b,o("p",null,[k,e(" 和 "),m,e(),c(t,{color:"red"},{default:a(()=>[e("不能")]),_:1}),e("共享 localStorage？ "),T,e(" 和 "),S,e(),c(t,{color:"red"},{default:a(()=>[e("不能")]),_:1}),e("共享 localStorage？")]),M,C])}const L=r(h,[["render",x]]);export{D as __pageData,L as default};
