import{_ as n,D as c,o as d,c as h,k as e,I as l,w as a,a as t,R as r}from"./chunks/framework.4hIqoSk1.js";const s="/larry-book-vite/assets/04.bA0Dp70p.png",i="/larry-book-vite/assets/05.08983YU1.png",p="/larry-book-vite/assets/06.LIkIA1Ed.png",$=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"browser/协议-网络.md","filePath":"browser/协议-网络.md","lastUpdated":1733279472000}'),u={name:"browser/协议-网络.md"},_=e("h2",{id:"什么是-http",tabindex:"-1"},[t("什么是 http？ "),e("a",{class:"header-anchor",href:"#什么是-http","aria-label":'Permalink to "什么是 http？"'},"​")],-1),T=r("",1),P=r("",13),f=e("br",null,null,-1),b=e("br",null,null,-1),g=e("br",null,null,-1),m=e("br",null,null,-1),C=e("p",null,"而 HTTP/3 则是基于 QUIC 协议的新一代 HTTP 协议。QUIC 是一个基于 UDP 的传输协议，具有以下特性：",-1),S=e("br",null,null,-1),q=e("br",null,null,-1),k=e("br",null,null,-1),x=r("",35),H=e("code",null,"1xx",-1),I=e("p",null,[e("strong",null,[t("2. "),e("code",null,"2xx"),t(" 类状态码表示服务器成功处理了客户端的请求，也是我们最愿意看到的状态。")])],-1),A=e("p",null,[e("strong",null,[t("3. "),e("code",null,"3xx"),t(" 类状态码表示客户端请求的资源发生了变动，需要客户端用新的 URL 重新发送请求获取资源，也就是重定向。")])],-1),U=e("li",null,[e("p",null,"301 和 302 都会在响应头里使用字段 Location，指明后续要跳转的 URL，浏览器会自动重定向新的 URL。")],-1),F=e("p",null,[e("strong",null,[t("4. "),e("code",null,"4xx"),t(" 类状态码表示客户端发送的报文有误，服务器无法处理，也就是错误码的含义。")])],-1),D=e("p",null,[e("strong",null,[t("5. "),e("code",null,"5xx"),t(" 类状态码表示客户端请求报文正确，但是服务器处理时内部发生了错误，属于服务器端的错误码。")])],-1),N=e("h2",{id:"http-常见字段有哪些",tabindex:"-1"},[t("HTTP 常见字段有哪些？ "),e("a",{class:"header-anchor",href:"#http-常见字段有哪些","aria-label":'Permalink to "HTTP 常见字段有哪些？"'},"​")],-1),E=e("code",null,"Content-Type: text/html; Charset=utf-8",-1),L=e("code",null,"Accept: */*",-1),w=e("code",null,"Content-Encoding: gzip",-1),R=e("code",null,"Accept-Encoding: gzip, deflate",-1),y=r("",6);function V(v,B,O,j,Y,K){const o=c("font");return d(),h("div",null,[_,e("p",null,[e("strong",null,[l(o,{color:"blue"},{default:a(()=>[t("概念：")]),_:1})])]),T,e("p",null,[e("strong",null,[l(o,{color:"blue"},{default:a(()=>[t("特性：")]),_:1})])]),P,l(o,{color:"red"},{default:a(()=>[t("1. 二进制分帧传输：")]),_:1}),t(" 将请求和响应消息分割为多个二进制帧，可以并发地发送和处理，提高传输效率。"),f,l(o,{color:"red"},{default:a(()=>[t("2. 多路复用：")]),_:1}),t(" 在单个连接上可以同时发送多个请求和响应，避免了建立多个 TCP 连接的开销，提高并发性能。"),b,l(o,{color:"red"},{default:a(()=>[t("3. 头部压缩：")]),_:1}),t(" 使用 HPACK 算法对请求和响应的头部进行压缩，减少数据传输量，提高性能。"),g,l(o,{color:"red"},{default:a(()=>[t("4. 服务器推送：")]),_:1}),t(" 服务器可以主动推送与当前页面相关的资源，减少客户端的请求延迟。"),m,C,l(o,{color:"red"},{default:a(()=>[t("1. 连接迁移：")]),_:1}),t(" 支持在网络切换或设备漫游时无缝迁移连接，避免连接中断。"),S,l(o,{color:"red"},{default:a(()=>[t("2. 无队头阻塞：")]),_:1}),t(" 解决了 TCP 协议中的队头阻塞问题，可以同时发送多个请求和响应，提高并发性能。"),q,l(o,{color:"red"},{default:a(()=>[t("3. 自定义拥塞控制：")]),_:1}),t(" 使用独立的拥塞控制算法，适应不同网络条件下的流量控制和拥塞控制。"),k,l(o,{color:"red"},{default:a(()=>[t("4. 前向安全和前向纠错：")]),_:1}),t(" 支持端到端的加密和纠错机制，提高数据传输的安全性和可靠性。"),x,e("p",null,[e("strong",null,[t("1. "),H,t(" 类状态码属于"),l(o,{color:"blue"},{default:a(()=>[t("提示信息")]),_:1}),t("，是协议处理中的一种中间状态，实际用到的比较少。")])]),I,e("ul",null,[e("li",null,[l(o,{color:"red"},{default:a(()=>[t("「200 OK」")]),_:1}),t("是最常见的成功状态码，表示一切正常。如果是非 HEAD 请求，服务器返回的响应头都会有 body 数据。")]),e("li",null,[l(o,{color:"red"},{default:a(()=>[t("「204 No Content」")]),_:1}),t("也是常见的成功状态码，与 200 OK 基本相同，但响应头没有 body 数据。")]),e("li",null,[l(o,{color:"red"},{default:a(()=>[t("「206 Partial Content」")]),_:1}),t("是应用于 HTTP 分块下载或断点续传，表示响应返回的 body 数据并不是资源的全部，而是其中的一部分，也是服务器处理成功的状态。")])]),A,e("ul",null,[e("li",null,[l(o,{color:"red"},{default:a(()=>[t("「301 Moved Permanently」")]),_:1}),t("表示永久重定向，说明请求的资源已经不存在了，需改用新的 URL 再次访问。")]),e("li",null,[l(o,{color:"red"},{default:a(()=>[t("「302 Found」")]),_:1}),t("表示临时重定向，说明请求的资源还在，但暂时需要用另一个 URL 来访问。")]),U,e("li",null,[l(o,{color:"red"},{default:a(()=>[t("「304 Not Modified」")]),_:1}),t("不具有跳转的含义，表示资源未修改，重定向已存在的缓冲文件，也称缓存重定向，也就是告诉客户端可以继续使用缓存资源，用于缓存控制。")])]),F,e("ul",null,[e("li",null,[l(o,{color:"red"},{default:a(()=>[t("「400 Bad Request」")]),_:1}),t("表示客户端请求的报文有错误，但只是个笼统的错误。")]),e("li",null,[l(o,{color:"red"},{default:a(()=>[t("「403 Forbidden」")]),_:1}),t("表示服务器禁止访问资源，并不是客户端的请求出错。")]),e("li",null,[l(o,{color:"red"},{default:a(()=>[t("「404 Not Found」")]),_:1}),t("表示请求的资源在服务器上不存在或未找到，所以无法提供给客户端。")])]),D,e("ul",null,[e("li",null,[l(o,{color:"red"},{default:a(()=>[t("「500 Internal Server Error」")]),_:1}),t("与 400 类型，是个笼统通用的错误码，服务器发生了什么错误，我们并不知道。")]),e("li",null,[l(o,{color:"red"},{default:a(()=>[t("「501 Not Implemented」")]),_:1}),t("表示客户端请求的功能还不支持，类似“即将开业，敬请期待”的意思。")]),e("li",null,[l(o,{color:"red"},{default:a(()=>[t("「502 Bad Gateway」")]),_:1}),t("通常是服务器作为网关或代理时返回的错误码，表示服务器自身工作正常，访问后端服务器发生了错误。")]),e("li",null,[l(o,{color:"red"},{default:a(()=>[t("「503 Service Unavailable」")]),_:1}),t("表示服务器当前很忙，暂时无法响应客户端，类似“网络服务正忙，请稍后重试”的意思。")])]),N,e("ul",null,[e("li",null,[l(o,{color:"#800000"},{default:a(()=>[t("Content-Type: ")]),_:1}),t(" 字段用于服务器回应时，告诉客户端，本次数据是什么格式。"),E]),e("li",null,[l(o,{color:"#800000"},{default:a(()=>[t("Accpet: ")]),_:1}),t(" 同上，客户端请求的时候，可以使用 Accept 字段声明自己可以接受哪些数据格式。"),L]),e("li",null,[l(o,{color:"#808000"},{default:a(()=>[t("Content-Encoding: ")]),_:1}),t(" 字段说明数据的压缩方法。表示服务器返回的数据使用了什么压缩格式。"),w]),e("li",null,[l(o,{color:"#808000"},{default:a(()=>[t("Accept-Encoding: ")]),_:1}),t(" 同上，客户端在请求时，用 Accept-Encoding 字段说明自己可以接受哪些压缩方法。"),R]),e("li",null,[l(o,{color:"blue"},{default:a(()=>[t("Connection: ")]),_:1}),t(" 字段最常用于客户端要求服务器使用 HTTP 长连接 机制，以便其他请求复用。")]),e("li",null,[l(o,{color:"blue"},{default:a(()=>[t("User-Agent: ")]),_:1}),t(" 浏览器的身份标识字符串")]),e("li",null,[l(o,{color:"blue"},{default:a(()=>[t("Cookie: ")]),_:1}),t(" 服务器通过 Set-Cookie 设置的一个 HTTP 协议 Cookie")]),e("li",null,[l(o,{color:"blue"},{default:a(()=>[t("Cache-Control: ")]),_:1}),t(" 用来指定当前的请求/回复中的，是否使用缓存机制。")]),e("li",null,[l(o,{color:"blue"},{default:a(()=>[t("Authorization: ")]),_:1}),t(" 用于表示 HTTP 协议中需要认证资源的认证信息.")])]),y])}const z=n(u,[["render",V]]);export{$ as __pageData,z as default};
